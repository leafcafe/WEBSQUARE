(self.webpackChunkwebpack_test = self.webpackChunkwebpack_test || []).push([[9839], {
	9839: (t, e, i) => {
		"use strict"; i.r(e), i.d(e, { multiselect: () => c }); var s = i(2981), r = i(2085), a = i(1960), n = i(3082), l = i(6615), o = i(3729), h = i(1577), c = function(t, e, i) { l.s.call(this, t, e, i) }; s.x.extend(c.prototype, l.s.prototype), s.x.extend(c.prototype, o.E.prototype), s.x.extend(c.prototype, h.z.prototype), c.prototype.defaultOptions = { pluginType: "uiplugin.multiselect", pluginName: "multiselect", userEvents: ["onchange", "onviewchange"], systemEvents: ["onclick", "ondblclick", "onfocus", "onblur"], initValue: "", renderType: "component", mandatory: !1, maxlength: -1, minlength: -1, allowChar: "", ignoreChar: "", characterCase: "", maxByteLength: -1, minByteLength: -1, validator: "", invalidMessage: "", invalidMessageFunc: "", displaymessage: !1, separator: " ", title: "", escape: !0, maxItemNum: -1, dataListAutoRefresh: !1 }, c.prototype.initialize = function(t) { try { this.lastSelectedIndex = -1, this.initializeItemArr(t), this.validator = new WebSquare.validator.validateInvoker(this.id, this.options), this.separator = this.options.separator = this.options.separator || " " } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.toHTML = function() { try { var t = n.D.getDataPrefix("index"), e = n.D.getDataPrefix("checked"), i = "" == this.options.disabled ? "" : "disabled='true'", s = "" == this.options.style ? "" : "style='" + this.options.style + "'", a = "" == this.options.tabIndex ? "tabIndex='0'" : "tabIndex='" + this.options.tabIndex + "'", l = "" == this.options.title ? "" : "title='" + this.options.title + "'", o = []; if ("native" == this.options.renderType) { o.push("<div " + i + " id='" + this.id + "' " + s + " class='w2multiselect_acc " + this.options.className + "' " + a + " " + l + " >"), (n.D.isIE(6) || n.D.isIE(7) || n.D.isOpera()) && o.push("<div style='overflow:visible;position:relative;height:0px'>"), o.push("<ul id='" + this.id + "_ul' class='w2multiselect_acc_ul'>"); for (var h = 0; h < this.itemArr.length; h++) { var c = this.options.escape ? WebSquare.xml._encode(this.itemArr[h].label) : this.itemArr[h].label; o.push("<li class='w2multiselect_acc_li' " + t + "='" + h + "' " + e + "='false'>"), o.push("<button class='w2multiselect_acc_link'>" + c + "</button>"), o.push("</li>") } o.push("</ul>"), (n.D.isIE(6) || n.D.isIE(7) || n.D.isOpera()) && o.push("</div>"), o.push("</div>") } else { o.push("<div " + i + " id='" + this.id + "' " + s + " class='w2multiselect_div " + this.options.className + "' " + a + " " + l + " >"), (n.D.isIE(6) || n.D.isIE(7) || n.D.isOpera()) && o.push("<div style='overflow:visible;position:relative;height:0px'>"), o.push("<table id='" + this.id + "_table' class='w2multiselect_table'>"); for (h = 0; h < this.itemArr.length; h++) { c = this.options.escape ? WebSquare.xml._encode(this.itemArr[h].label) : this.itemArr[h].label; o.push("<tr class='w2multiselect_tr' " + t + "='" + h + "' " + e + "='false'>"), o.push("<td class='w2multiselect_td'>" + c + "</td>"), o.push("</tr>") } o.push("</table>"), (n.D.isIE(6) || n.D.isIE(7) || n.D.isOpera()) && o.push("</div>"), o.push("</div>") } return o.join("") } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setPreAction = function() { }, c.prototype.setAction = function() { try { if (this.options.nextTabID && this.setNextTabID(this.options.nextTabID, this.scope_id), this.modelControl.isItemsetBinded() && (this.refreshItemArr(), this.componentRedraw()), this.modelControl.isBinded()) { var t = this.modelControl.getData(); this.setValueNM(t) } this.options.mandatory && this.onPropertyChange("mandatory", n.D.getBoolean(this.options.mandatory)), this.event.addListener(this.render, "onclick", this.event.bindAsEventListener(this, this.handleClickEvent)), this.event.addListener(this.render, "onselectstart", (function(t) { a.B.stopEvent(t) })), this.event.addListener(this.render, "onkeydown", this.event.bindAsEventListener(this, this.handleKeydownEvent)) } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.refreshItemset = function() { try { if (this.modelControl.isItemsetBinded()) { var t = this.getValue(); this.refreshItemArr(), this.componentRedraw(t) } } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.refresh = function() {
			try {
				if (this.modelControl.isBinded()) {
					var t = this.getValue(), e = this.modelControl.getData(); this.setValueNM(e),
						t != this.getValue() && a.B.fireEvent(this, "onchange")
				}
			} catch (t) { r.w.printStackTrace(t, null, this) }
		}, c.prototype.componentRedraw = function(t) { try { this.redraw(), this.setValueNM(t) } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getItemCount = function() { try { return this.itemArr.length } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setSelectedIndex = function(t) { try { for (var e = t.split(this.separator), i = 0; i < e.length; i++) { var s = e[i]; s = parseInt(s), this.setSelectedIndexNM(s) && this.setInstanceValue() } } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setSelectedIndexNM = function(t, e) { try { if ((t = parseInt(t)) < 0 || t >= this.getItemCount()) return !1; var i = n.D.getDataPrefix("checked"), s = this.getMultiselectList()[t]; return e = null == e || e, s.setAttribute(i, e), e ? "native" == this.options.renderType ? this.addClass(s, "w2multiselect_acc_li_over") : this.addClass(s, "w2multiselect_tr_over") : "native" == this.options.renderType ? this.removeClass(s, "w2multiselect_acc_li_over") : this.removeClass(s, "w2multiselect_tr_over"), !0 } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getText = function(t) { try { t || (t = this.separator); for (var e = [], i = n.D.getDataPrefix("checked"), s = this.getMultiselectList(), a = 0; a < s.length; a++)n.D.getBoolean(s[a].getAttribute(i)) && e.push(this.itemArr[a].label); return e.join(t).wq_trim() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getValue = function(t) { try { t || (t = this.separator); for (var e = [], i = n.D.getDataPrefix("checked"), s = this.getMultiselectList(), a = 0; a < s.length; a++)n.D.getBoolean(s[a].getAttribute(i)) && e.push(this.itemArr[a].value); return e.join(t).wq_trim() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getAllValue = function() { try { for (var t = [], e = this.getMultiselectList(), i = 0; i < e.length; i++)t.push(this.itemArr[i].value); return t.join(this.separator).wq_trim() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getIdxValue = function(t) { try { return !(t < 0 || t >= this.getItemCount()) && this.itemArr[t].value } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setValue = function(t) { try { if (n.D.isNull(t)) return; var e = this.getValue(); this.setValueNM(t), this.modelControl.setData(t), e != this.getValue() && a.B.fireEvent(this, "onchange") } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setValueNM = function(t) { try { if (n.D.isNull(t)) return; for (var e = (t = t.toString()).split(this.separator), i = [], s = 0; s < e.length; s++)i[e[s] + ""] = ""; var a = this.getItemCount(); for (s = 0; s < a; s++) { null != i[t = this.itemArr[s].value] ? this.setSelectedIndexNM(s, !0) : this.setSelectedIndexNM(s, !1) } } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setText = function(t) { try { for (var e = t.split(this.separator), i = this.getItemCount(), s = [], a = 0; a < e.length; a++)for (var n = 0; n < i; n++)this.itemArr[n].label == e[a] && s.push(this.itemArr[n].value); var l = s.join(this.separator).wq_trim(); this.setValue(l) } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getSelectedIndex = function(t) { try { t || (t = this.separator); for (var e = [], i = n.D.getDataPrefix("checked"), s = this.getMultiselectList(), a = 0; a < s.length; a++)n.D.getBoolean(s[a].getAttribute(i)) && e.push(a); return e.join(t).wq_trim() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.deleteItem = function(t, e) { try { if (t = parseInt(t), null == e && (e = this.options.dataListAutoRefresh), this.itemsetObj.nodeset.match("data:") && e) { var i = this.modelControl.getDataComp(); if (i && WebSquare.idCache[i.uuid]) { var s = i.removeRow(t - 1); return { label: s[i.getColumnIndex(this.itemsetObj.label)], value: s[i.getColumnIndex(this.itemsetObj.value)] } } } for (var a = "native" == this.options.renderType ? this.getLabelDom() : this.getTbodyDom(), n = null, l = a.firstChild; null != l; l = l.nextSibling)l.getAttribute("index") == t && (n = this.itemArr.splice(t, 1)[0], l.parentNode.removeChild(l), this.refreshIndex()); return n } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.deleteSelectedItems = function(t) {
			try {
				var e = "native" == this.options.renderType ? this.getLabelDom() : this.getTbodyDom(); null == t && (t = this.options.dataListAutoRefresh)
					; for (var i = n.D.getDataPrefix("index"), s = n.D.getDataPrefix("checked"), a = e.firstChild; null != a; a = a.nextSibling)if (n.D.getBoolean(a.getAttribute(s))) { var l = a.getAttribute(i); if (this.itemsetObj.nodeset.match("data:") && t) { var o = this.modelControl.getDataComp(); if (o && WebSquare.idCache[o.uuid]) { o.removeRow(l), this.deleteSelectedItems(t); continue } } this.itemArr.splice(l, 1), a.parentNode.removeChild(a), this.refreshIndex(), this.deleteSelectedItems() }
			} catch (t) { r.w.printStackTrace(t, null, this) }
		}, c.prototype.refreshIndex = function() { try { for (var t = "native" == this.options.renderType ? this.getLabelDom() : this.getTbodyDom(), e = 0, i = t.firstChild; null != i; i = i.nextSibling)i.setAttribute("index", e + ""), ++e } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setInstanceValue = function() { try { var t = this.getValue(); this.modelControl.setData(t), this.fireOnchange() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getMultiselectList = function() { try { return "native" == this.options.renderType ? this.getDomList("multiselectArr", "li") : this.getDomList("multiselectArr", "tr") } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.onPropertyChange = function(t, e) { try { switch (t) { case "disabled": this.options.disabled = e, e ? this.addClass(this.render, "w2multiselect_disabled") : this.removeClass(this.render, "w2multiselect_disabled"); break; case "readOnly": break; case "mandatory": 1 == e ? this.addClass(this.render, "w2multiselect_mandatory") : this.removeClass(this.render, "w2multiselect_mandatory") } } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.validate = function() { try { var t = this.validator.validate(this.getValue()); return t || this.focus(), t } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.validateObject = function() { try { var t = this.validator.validate(this.getValue()), e = {}; return t || (this.focus(), this.validator && this.validator.obfuscator_invalidObject && (e.callerId = this.validator.obfuscator_invalidObject.callerId, e.type = this.validator.obfuscator_invalidObject.getType(), e.value = this.validator.obfuscator_invalidObject.getValue())), e } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setInitValue = function(t) { try { var e = this.getValue(); this.setValueNM(this.options.initValue), this.modelControl.setData(this.options.initValue), t.fireEvent && e != this.getValue() && a.B.fireEvent(this, "onchange") } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setRef = function(t) { try { this.modelControl.isBinded() || (this.modelControl.useRef = !0), this.options.ref = t, this.modelControl.setRef(t), this.refresh() } catch (t) { r.w.printStackTrace(t) } }, c.prototype.unbindRef = function() { try { this.modelControl.isBinded() && (this.options.ref = "", this.modelControl.unbindRef(), this.refresh()) } catch (t) { r.w.printStackTrace(t) } }, c.prototype.focusNextTabOrder = function() { try { if (null != WebSquare.tabOrder[this.id] && null != WebSquare.tabOrder[this.id].nextTabID) { var t = n.D.getNextTabbableComp(this.id); t && t.focus() } } catch (t) { r.w.printStackTrace(t) } }, c.prototype.focusPreTabOrder = function() { try { if (null != WebSquare.tabOrder[this.id] && null != WebSquare.tabOrder[this.id].preTabID) { var t = n.D.getPreTabbableComp(this.id); t && t.focus() } } catch (t) { r.w.printStackTrace(t) } }, c.prototype.handleClickEvent = function(t) {
			try {
				if (a.B.stopEvent(t), this.options.disabled) return !1; var e = this.event.getTargetIterator(t, this.render), i = "native" == this.options.renderType ? this.getLabelDom() : this.getTbodyDom(); if (!t.ctrlKey && i.childNodes && "native" != this.options.renderType) for (var s = 0; s < i.childNodes.length; s++)this.setSelectedIndexNM(s, !1); for (var l = this.getValue(), o = this.getSelectedIndex(), h = n.D.getDataPrefix("index"), c = n.D.getDataPrefix("checked"); e.next();)if (e.match("w2multiselect_tr") || e.match("w2multiselect_acc_li")) {
					var u = e.getElement().getAttribute(h); if (t.shiftKey) {
						var d, p = parseInt(u, 10), m = parseInt(this.lastSelectedIndex, 10), f = -1, v = -1, y = []; if (m < p) if (f = m, this.options.maxItemNum > -1) v = m + (f > -1 ? this.options.maxItemNum - 1 : this.options.maxItemNum); else v = p; else if (v = m, this.options.maxItemNum > -1) f = m - (this.options.maxItemNum - 1); else f = p; for (s = f; s <= v; s++)y.push(s)
							; d = y.join(this.separator).wq_trim(), this.setSelectedIndex(d)
					} else if ((t.ctrlKey || "native" == this.options.renderType) && n.D.getBoolean(e.getElement().getAttribute(c))) this.lastSelectedIndex = u, this.setSelectedIndexNM(u, !1), this.setInstanceValue(); else { var g = this.getValue(); if (("" == g ? 0 : g.split(" ").length) >= this.options.maxItemNum && this.options.maxItemNum > -1) break; this.lastSelectedIndex = u, this.setSelectedIndex(u) }
				} e = null; var b = this.getValue(), w = { oldValue: l, newValue: b, oldSelectedIndex: o, newSelectedIndex: this.getSelectedIndex() }; l != b && a.B.fireEvent(this, "onviewchange", w), a.B.fireEvent(this, "onrowclick", w), "native" != this.options.renderType && this.focus()
			} catch (t) { r.w.printStackTrace(t, null, this) }
		}, c.prototype.handleKeydownEvent = function(t) { try { var e; if (9 == (t.charCode ? t.charCode : t.keyCode)) if (t.shiftKey) { if (null != WebSquare.tabOrder[this.id] && null != WebSquare.tabOrder[this.id].preTabID) if (a.B.preventDefault(t), e = n.D.getPreTabbableComp(this.id)) return void e.focus() } else if (null != WebSquare.tabOrder[this.id] && null != WebSquare.tabOrder[this.id].nextTabID) if (a.B.preventDefault(t), e = n.D.getNextTabbableComp(this.id)) return void e.focus() } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.fireOnchange = function() { try { a.B.fireEvent(this, "onchange") } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.setStyle = function(t, e) { try { if (!this.render) return; if (WebSquare.style.setStyle(this.render, t, e), "font-size" == t) for (var i = ("native" == this.options.renderType ? this.getLabelDom() : this.getTbodyDom()).firstChild; null != i; i = i.nextSibling) { i.firstChild.style[t] = e } } catch (t) { r.w.printStackTrace(t) } }, c.prototype.addItem = function(t, e, i, s) { try { if (i = parseInt(i, 10), (isNaN(i) || i < 0 || i >= this.getItemCount()) && (i = this.getItemCount()), null == s && (s = !0), this.itemsetObj.nodeset.match("data:") && s) { var a = this.modelControl.getDataComp(); if (a && WebSquare.idCache[a.uuid]) { var n = {}; return n[this.itemsetObj.value] = t, n[this.itemsetObj.label] = e, a.insertJSON(i, [n]), i } } var l = {}; return l.value = t, l.label = e, this.itemArr.splice(i, 0, l), this.redraw(), i } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getTbodyDom = function() { try { var t = document.getElementById(this.id + "_table"); return t.childNodes.length > 0 ? t.childNodes[0] : [] } catch (t) { r.w.printStackTrace(t, null, this) } }, c.prototype.getLabelDom = function() { try { var t = document.getElementById(this.id + "_ul"); return t.childNodes.length > 0 ? t : [] } catch (t) { r.w.printStackTrace(t, null, this) } }
	}
}]);