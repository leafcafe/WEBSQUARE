<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>동적으로 DataMap, DataList 생성하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_bbaec6dd1f18a3bb" class="chapter_title">동적으로 DataMap, DataList 생성하기</h1><h1 id="r_e1e35fad45dfa4ef" class="element heading1"><span class="heading1_n">1</span>개요</h1><p id="r_ece2037e5c7ce1e3" class="element normal">동적으로 DataMap, DataList를 생성하는 예제입니다.</p><p id="r_817b028cb3704796" class="element r_example_link_p"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00046">P00046</a></p><h1 id="r_0391a3bb02cb2096" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_b78a2d69adc6f8ad" class="element unordered_list"><li><p>DataMap 생성하기</p></li><li><p>DataList 생성하기</p></li></ul><h1 id="r_cff5d97893ec454f" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><h2 id="r_a24719e28e2c7ad1" class="element heading2"><span class="heading2_n">3.1</span>알아두기</h2><p id="r_fd4f9b98f14f8eb9" class="element normal">이 예제는 예제 화면의 영역 [<span class="r_blue001_span">로그 확인</span>]의 textarea에 실행 결과 값이 출력됩니다.</p><div id="r_c05e8c042cbd3a6e" class="element image"><p class="caption"><span class="image_caption_n">그림 0-1.</span>로그 출력 영역 참고 이미지</p><p class="content"><img alt="" src="images/image013.png" width="374" height="184" /></p></div><h2 id="r_fcb3f347c4c53896" class="element heading2"><span class="heading2_n">3.2</span>DataCollection 확인 하기</h2><dl id="r_f7fcfa9ec91140f6" class="element definition_list"><dt>STEP1. 웹스퀘어 컨텍스트 메뉴를 실행합니다.</dt><dd><p>브라우저의 버튼 <span class="r_exec_btn_style_span">DataMap 생성하기</span>의 하단 영역에서 [Ctrl] 키를 누른 채 마우스 오른쪽 버튼을 클릭합니다.</p><p>아래의 이미지와 같이 컨텍스트 메뉴가 노출됩니다. [dataCollection보기] 메뉴를 클릭합니다.</p><p><img alt="" src="images/image014.png" width="242" height="237" /></p><p>DataCollection을 확인할 수 있는 팝업이 생성됩니다.</p></dd><dt>STEP2. dataColleciton의 목록을 클릭하여 생성되어 있는 목록을 확인합니다.</dt><dd><p>아래는 실행된 이미지 예시입니다.</p><p><img alt="" src="images/image015.png" width="544" height="435" /></p></dd></dl><h2 id="r_d537b4380674c616" class="element heading2"><span class="heading2_n">3.3</span>DataMap 생성하기</h2><dl id="r_3f33185c25be44a2" class="element definition_list"><dt>STEP1. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="sp5_ex_P00046.xhtml#r_fcb3f347c4c53896">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>화면의 버튼을 클릭하기 전인 경우 두개의 데이터 객체(dlt_book, dma_userInfo)가 생성되어있습니다. </p></dd><dt>STEP2. 버튼 <span class="r_exec_btn_style_span">DataMap 생성하기</span>를 클릭합니다.</dt><dd><p>로그 출력창에 실행 단계 로그가 출력됨을 확인합니다.</p><p><em>[로그 예시]</em></p><p>[10:44:27] ** [실행1] - DataMap 생성하기 scwin.btn_ex1_onclick 실행 시작 **</p><p>[10:44:27] &gt; 1단계 DataMap 생성 완료</p><p>[10:44:27] &gt; 2단계 DataMap setJSON 호출 완료</p><p>[10:44:27] {"name":"Inswave Systems","address":"서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"}</p><p>[10:44:27] &gt; 3단계 DataMap getJSON 호출 완료</p><p>[10:44:27] ** [실행1] - DataMap 생성하기 scwin.btn_ex1_onclick 실행 종료 **</p></dd><dt>STEP3. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="#">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>dataCollection 목록에 <span class="r_blue001_span">dma_dynamic1</span>이 추가되었음을 확인합니다.</p><p>아래의 이미지와 같이 <span class="r_blue001_span">dma_dynamic1</span>을 선택하고 버튼 [<span class="r_blue001_span">조회</span>]를 클릭하여 할당된 데이터를 확인합니다.</p><p><img alt="" src="images/image016.png" width="557" height="422" /></p></dd></dl><h2 id="r_f42ef967018770de" class="element heading2"><span class="heading2_n">3.4</span>DataList 생성하기</h2><dl id="r_bdddf69d4e63d917" class="element definition_list"><dt>STEP1. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="sp5_ex_P00046.xhtml#r_fcb3f347c4c53896">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>화면의 버튼을 클릭하기 전인 경우 두개의 데이터 객체(dlt_book, dma_userInfo)가 생성되어있습니다. </p></dd><dt>STEP2. 버튼 <span class="r_exec_btn_style_span">DataList 생성하기</span>를 클릭합니다.</dt><dd><p>로그 출력창에 실행 단계 로그가 출력됨을 확인합니다.</p><p><em>[로그 예시]</em></p><p>[10:45:30] ** [실행2] - DataList 생성하기 scwin.btn_ex2_onclick 실행 시작 **</p><p>[10:45:30] &gt; 1단계 DataList 생성 완료</p><p>[10:45:30] &gt; 2단계 DataList setJSON 호출 완료</p><p>[10:45:30] [{"code":"1","label":"","rowStatus":"R"},{"code":"2","label":"","rowStatus":"R"},{"code":"3","label":"","rowStatus":"R"}]</p><p>[10:45:30] &gt; 3단계 DataList getAllJSON 호출 완료</p><p>[10:45:30] ** [실행2] - DataList 생성하기 scwin.btn_ex2_onclick 실행 종료 **</p></dd><dt>STEP3. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="#">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>dataCollection 목록에 <span class="r_blue001_span">dlt_dynamic1</span>이 추가되었음을 확인합니다.</p><p>아래의 이미지와 같이 <span class="r_blue001_span">dlt_dynamic1</span>을 선택하고 버튼 [<span class="r_blue001_span">조회</span>]를 클릭하여 할당된 데이터를 확인합니다.</p><p><img alt="" src="images/image017.png" width="566" height="476" /></p></dd></dl><h1 id="r_a7e7402550b4fafa" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_96b69bf5984e4f21" class="element heading2"><span class="heading2_n">4.1</span>DataMap 생성하기</h2><p id="r_a257a3d033b9e58b" class="element normal">데이터 객체의 옵션을 JSON으로 할당한 예시입니다.</p><div id="r_6fb69975e0da7311" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="keyword">var</span> jsnOption;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//DataMap 속성 정의</span>
<span class="digits_10 code_line"></span>jsnOption = {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> : <span class="string">"dma_dynamic1"</span>,  <span class="comment">//생성할 DatMap의 ID입니다.</span>
<span class="digits_10 code_line"></span>    <span class="string">"type"</span> : <span class="string">"dataMap"</span>,     <span class="comment">//생성할 데이터객체의 타입입니다. dataMap 고정.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"option"</span> : {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"baseNode"</span>:<span class="string">"map"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"keyInfo"</span> : [
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> : <span class="string">"name"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"name"</span> : <span class="string">"성명"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"dataType"</span> : <span class="string">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> : <span class="string">"address"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"name"</span> : <span class="string">"주소"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"dataType"</span> : <span class="string">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;]
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//1. DataCollection 생성하기</span>
<span class="digits_10 code_line"></span>$p.data.create(jsnOption);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//2. 생성된 객체에 Data 할당하기</span>
<span class="digits_10 code_line"></span><span class="comment">//옵션에 적용한 id로 직접 접근이 가능합니다.</span>
<span class="digits_10 code_line"></span>dma_dynamic1.setJSON({
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"name"</span> : <span class="string">"Inswave Systems"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"address"</span> : <span class="string">"서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"</span>
<span class="digits_10 code_line"></span>});
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">/*
<span class="digits_10 code_line"></span>//또는 아래와 같이 $p.getComponentById API로 객체를 반환 받아 제어할 수 있습니다.
<span class="digits_10 code_line"></span>let cmpDataMap = $p.getComponentById("dma_dynamic1");
<span class="digits_10 code_line"></span>cmpDataMap.setJSON({
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;"name" : "Inswave Systems",
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;"address" : "서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"
<span class="digits_10 code_line"></span>});
<span class="digits_10 code_line"></span>*/</span></pre></div><h2 id="r_5d7cc54e72ae703c" class="element heading2"><span class="heading2_n">4.2</span>DataList 생성하기</h2><p id="r_d91e24af3de6089b" class="element normal">데이터 객체의 옵션을 JSON으로 할당한 예시입니다.</p><div id="r_0483295216481b88" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="keyword">var</span> jsnOption;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//DataList 속성 정의</span>
<span class="digits_10 code_line"></span>jsnOption = { 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> : <span class="string">"dlt_dynamic1"</span>,  <span class="comment">//생성할 DatList의 ID입니다.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"type"</span> : <span class="string">"dataList"</span>,    <span class="comment">//생성할 데이터객체의 타입입니다. dataList 고정.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"option"</span> : { 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"baseNode"</span>: <span class="string">"list"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"repeatNode"</span>: <span class="string">"map"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"columnInfo"</span> : [ 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> : <span class="string">"code"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"name"</span>: <span class="string">"코드"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"dataType"</span> :<span class="string">"text"</span> 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"id"</span> :<span class="string">"label"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"name"</span> : <span class="string">"코드명"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"dataType"</span> :<span class="string">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;] 
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//1. DataCollection 생성하기</span>
<span class="digits_10 code_line"></span>$p.data.create(jsnOption);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//2. 생성된 객체에 Data 할당하기</span>
<span class="digits_10 code_line"></span><span class="comment">//옵션에 적용한 id로 직접 접근이 가능합니다.</span>
<span class="digits_10 code_line"></span>dlt_dynamic1.setJSON([
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="string">"lable"</span> : <span class="string">"소설"</span>, <span class="string">"code"</span> : <span class="string">"1"</span>},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="string">"lable"</span> : <span class="string">"인문"</span>, <span class="string">"code"</span> : <span class="string">"2"</span>},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="string">"lable"</span> : <span class="string">"자기계발"</span>, <span class="string">"code"</span> : <span class="string">"3"</span>}
<span class="digits_10 code_line"></span>]);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">/*
<span class="digits_10 code_line"></span>//또는 아래와 같이 $p.getComponentById API로 객체를 반환 받아 제어할 수 있습니다.
<span class="digits_10 code_line"></span>let cmpDataList = $p.getComponentById("dlt_dynamic1");
<span class="digits_10 code_line"></span>cmpDataList.setJSON([
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "소설", "code" : "1"},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "인문", "code" : "2"},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "자기계발", "code" : "3"}
<span class="digits_10 code_line"></span>]);
<span class="digits_10 code_line"></span>*/</span></pre></div><h1 id="r_42e65d6b64306371" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><dl id="r_629464a926979492" class="element definition_list"><dt><span class="r_ex_api_method_span">$p.data.create( dataCollectionString , dataCollectionObject )</span></dt></dl></div></body></html>