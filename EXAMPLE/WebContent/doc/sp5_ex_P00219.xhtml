<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>[GridView] Event - oncontextopen (컨텍스트 메뉴가 표시될 때 발생)</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_63601e9321c5416f" class="chapter_title">[GridView] Event - oncontextopen (컨텍스트 메뉴가 표시될 때 발생)</h1><h1 id="r_4e6819133ecd0880" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_c57720f0fde4c549" class="element pre">GridView의 이벤트 onContextOpen 예제입니다.
onContextOpen 이벤트는 컨텍스트 메뉴가 열릴 때 발생합니다.
지정된 이벤트 핸들러에서 클릭된 셀의 row index, column index, focuced cell info, header info를 확인할 수 있습니다.</pre><div id="r_74dc1a1d6e01e5bc" class="element caution">이 이벤트는 GridView의 속성 contextMenu="true" 또는 useHeaderContextMenu="true"가 설정되어야 합니다.</div><p id="r_5d41077bf7bc2494" class="element r_example_link_p"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00219">P00219</a></p><h1 id="r_45bde8f0452ffede" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_299978057b4b8c1a" class="element unordered_list"><li><p>이벤트 oncontextopen 발생 시 로그 출력하기</p></li></ul><h1 id="r_51363f377e5e19ff" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><h2 id="r_9e5a3b6748cb2921" class="element heading2"><span class="heading2_n">3.1</span>이벤트 oncontextopen 발생 시 로그 출력하기</h2><dl id="r_63bcc70e6b08e028" class="element definition_list"><dt>STEP1. 초기 상태 확인하기</dt><dd><p>영역 [<em>이벤트 oncontextopen 발생 시 로그 출력하기</em>]의 GridView를 확인합니다.</p><p>GridView의 rowNum, rowStatus 기능이 사용 지정되었고,</p><p>컨텍스트 메뉴 사용이 지정되었습니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em> </p><p><img alt="" src="images/image751.png" width="372" height="243" /></p></dd></dl><p id="r_625de4442be7b7af" class="element r_heading_dt_p">STEP2. 컬럼 '도서명'의 2번째 행의 셀 위에서 마우스 오른쪽 버튼을 클릭합니다.</p><dl id="r_f14cfb472b70acaa" class="element definition_list"><dt>STEP3. 실행 결과를 확인합니다.</dt><dd><p>컬럼 '도서명'의 2번째 행의 셀이 선택되고 컨텍스트 메뉴가 출력됩니다.</p><p><em>[브라우저(Chrome) 실행 예시 - 로그 확인]</em> </p><p><img alt="" src="images/image752.png" width="371" height="248" /></p><p>oncontextopen 이벤트가 발생되고 이벤트 핸들러가 실행되어 로그가 출력됩니다.</p><p>영역 [<em>로그 확인</em>] 또는 브라우저의 개발자 도구의 콘솔(console)탭에 출력된 로그를 확인합니다</p><p><em>[브라우저(Chrome) 실행 예시 - 로그 확인]</em> </p><p><img alt="" src="images/image753.png" width="372" height="237" /></p><p><em>[로그 예시]</em></p><p>[07:31:04] ** scwin.grd_exam1_oncontextopen ** </p><p>row index : 1</p><p>column index : 0</p><p>body focused cell info : [{"rowIndex":1,"colIndex":0}]</p><p>header info : undefined</p></dd></dl><h1 id="r_49aab4ea97d0d65a" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_a9f0d4848915aaf5" class="element heading2"><span class="heading2_n">4.1</span>이벤트 oncontextopen의 핸들러 지정하기</h2><dl id="r_6da31a1b3d1a573e" class="element definition_list"><dt>STEP1. GridView의 속성을 정의합니다.</dt><dd><p>컨텍스트 메뉴 기능을 사용하기 위해 아래의 속성을 설정합니다.</p></dd></dl><ul id="r_0b03054fe6c80078" class="element unordered_list"><li><p><span class="r_blue001_span">[필수] contextMenu="true"</span> //바디 영역에 컨텍스트 메뉴 사용</p><p>또는</p><p><span class="r_blue001_span">[필수] useHeaderContextMenu="true"</span> //헤더 영역에 컨텍스트 메뉴 사용</p></li></ul><div id="r_d171ce6503162ac5" class="element image"><p class="caption"><span class="image_caption_n">그림 0-1.</span>웹스퀘어5 SP5 스튜디오의 Property View(속성창) 예시</p><p class="content"><img alt="" src="images/image754.png" width="269" height="186" /></p></div><p id="r_d6bef11bb0c04805" class="element r_heading_dt_p">[소스 코드 예시]</p><div id="r_34ff9595ba2d8ae3" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">&lt;!-- gridView 의 소스 본문 예시 --&gt;</span>
<span class="digits_1 code_line"></span>&lt;w2:gridView <span class="attribute_name">useHeaderContextMenu</span>=<span class="attribute_value">"true"</span> <span class="attribute_name">contextMenu</span>=<span class="attribute_value">"true"</span> <span class="attribute_name">id</span>=<span class="attribute_value">"grd_exam1"</span> <span class="attribute_name">dataList</span>=<span class="attribute_value">"data:dlt_books_1"</span>&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">&lt;!-- 중략 --&gt;</span>
<span class="digits_1 code_line"></span>&lt;/w2:gridView&gt;</pre></div><dl id="r_742968a527053941" class="element definition_list"><dt>STEP2. GridView의 이벤트 oncontextopen 핸들러를 지정합니다.</dt><dd><p>예제 파일에서는 핸들러로 사용할 함수명을 <span class="r_blue001_span">scwin.grd_exam1_oncontextopen</span>로 정의하였습니다.</p></dd></dl><p id="r_2ed8a328030ade5b" class="element r_p_bold_pl_p">[소스 코드 예시]</p><div id="r_90c388f8e8901e37" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">/**
<span class="digits_10 code_line"></span> * GridView grd_exam1의 oncontextopen 이벤트 핸들러
<span class="digits_10 code_line"></span> */</span>
<span class="digits_10 code_line"></span>scwin.grd_exam1_oncontextopen = <span class="keyword">function</span> (rowIndex, colIndex, arrJsnFocusedCell, jsnHeaderInfo) {
<span class="digits_10 code_line"></span>    console.log(rowIndex, colIndex, arrJsnFocusedCell, jsnHeaderInfo);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span>    <span class="comment">//header cell에서 열린 경우 rowIndex 값은 -1 입니다.</span>
<span class="digits_10 code_line"></span>    <span class="keyword">if</span> (rowIndex == -1) {
<span class="digits_10 code_line"></span>        <span class="comment">//header cell에서 열린 경우</span>
<span class="digits_10 code_line"></span>        <span class="keyword">switch</span> (jsnHeaderInfo.headerId) {
<span class="digits_10 code_line"></span>            <span class="keyword">case</span> <span class="string">"_headerRowStatus"</span>: <span class="comment">//컬럼 rowNum</span>
<span class="digits_10 code_line"></span>                console.log(<span class="string">"header rowNum"</span>);
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>            <span class="keyword">case</span> <span class="string">"_headerRowNumber"</span>: <span class="comment">//컬럼 rowStatus</span>
<span class="digits_10 code_line"></span>                console.log(<span class="string">"header rowStatus"</span>);
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>            default:
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>        }
<span class="digits_10 code_line"></span>    } <span class="keyword">else</span> {
<span class="digits_10 code_line"></span>        <span class="comment">//body cell에서 열린 경우</span>
<span class="digits_10 code_line"></span>        <span class="keyword">switch</span> (colIndex) {
<span class="digits_10 code_line"></span>            <span class="keyword">case</span> <span class="string">"rowNum"</span>: <span class="comment">//컬럼 rowNum</span>
<span class="digits_10 code_line"></span>                console.log(<span class="string">"body rowNum"</span>);
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>            <span class="keyword">case</span> <span class="string">"rowStatus"</span>: <span class="comment">//컬럼 rowStatus</span>
<span class="digits_10 code_line"></span>                console.log(<span class="string">"body rowStatus"</span>);
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>            default:
<span class="digits_10 code_line"></span>                break;
<span class="digits_10 code_line"></span>        }
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>};</pre></div><h1 id="r_a6b8c7e403e61fe6" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><ul id="r_faa1473f0cdeb7d0" class="element unordered_list"><li><p><span class="r_ex_api_property_span">contextMenu</span></p></li><li><p><span class="r_ex_api_property_span">useHeaderContextMenu</span></p></li><li><p><span class="r_ex_api_event_span">oncontextopen</span></p></li></ul><h1 id="r_0ff16b681cc56522" class="element heading1"><span class="heading1_n">6</span>참고 문서</h1><ul id="r_4ff784212bffc853" class="element unordered_list"><li><p><strong>[웹스퀘어5 SP5 개발 가이드] GridView</strong></p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide#0a551d265f2956b2">https://docs1.inswave.com/sp5_user_guide#0a551d265f2956b2</a></p></li><li><p><strong>[웹스퀘어5 SP5 개발 가이드] GridView oncontextopen</strong> </p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide#65c87adf089054c5">https://docs1.inswave.com/sp5_user_guide#65c87adf089054c5</a></p></li></ul><h1 id="r_4029fc5e6fc9507e" class="element heading1"><span class="heading1_n">7</span>참고 동영상</h1><ul id="r_404a79534e75b114" class="element unordered_list"><li><p><em>GridView oncontextopen</em> </p><p>링크 : <a class="link" href="https://youtu.be/2sRK1QVpSZo">https://youtu.be/2sRK1QVpSZo</a></p><p><img alt="" src="images/image755.png" width="589" height="417" /></p></li></ul></div></body></html>