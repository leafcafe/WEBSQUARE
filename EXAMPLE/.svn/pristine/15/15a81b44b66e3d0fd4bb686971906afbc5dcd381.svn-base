<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>Generator 기본 기능</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_393780baf7b05707" class="chapter_title">Generator 기본 기능</h1><h1 id="r_9a25b58934953602" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_3e4aa808fcb5145b" class="element pre">Generator는 자식을 구성할 수 있는 컨테이너성 컴포넌트입니다. 동적으로 자식 컴포넌트를 반복(추가), 삭제하는 기능을 제공합니다.
주로 반복되는 컴포넌트의 유형이 결정되어 있는 경우 사용합니다. 입력 서식을 동적으로 구성하거나, 게시판(표)의 목록 출력, 달력 UI 구성 등에 활용됩니다.

이 예제에 구현된 기능은 아래와 같습니다.</pre><ul id="r_a0faa15d0841d56f" class="element unordered_list"><li><p>컴포넌트 반복하기</p></li><li><p>반복된 컴포넌트에 접근하기</p></li><li><p>반복된 컴포넌트 전체 삭제하기</p></li></ul><p id="r_74957a263fc5a683" class="element r_example_link_p"><a class="link" href="http://example.inswave.kr/sp5/exampleLink.html?p=P00035">P00035</a></p><h1 id="r_f27cf5e5e728c189" class="element heading1"><span class="heading1_n">2</span>예제 테스트 방법</h1><dl id="r_c51e7a18e09a7158" class="element definition_list"><dt>컴포넌트 반복(추가)하기</dt><dd><p><span class="r_btn_style_span">addItem</span>버튼을 클릭합니다.</p><p>마지막 행 하위로 컴포넌트가 추가됩니다.</p><p>추가된 컴포넌트의 inputbox 컴포넌트의 value에 반복된 index값이 출력됩니다.</p></dd><dt>반복된 행의 다른 컴포넌트(inputBox)의 값(value) 가져오기</dt><dd><p>반복된 행의 <span class="r_btn_style_span">getValue</span>버튼을 클릭합니다.</p><p>버튼이 위치한 행의 inputbox에 입력된 값(value)이 alert으로 출력됩니다.</p></dd><dt>반복된 UI(자식 컴포넌트) 모두 삭제하기</dt><dd><p><span class="r_btn_style_span">removeAll</span>버튼을 클릭합니다.</p><p>반복된 목록이 모두 삭제됩니다.</p></dd></dl><h1 id="r_b13187711a1a2921" class="element heading1"><span class="heading1_n">3</span>주의사항</h1><div id="r_ad36b71c156d78ea" class="element caution">• 아래의 컴포넌트는 반복(자식) 컴포넌트로 사용할 수 없습니다.<br/>Chart, GridView, Menu, Switch, TabControl, TreeView, WindowContainer<br/><br/>• 반복되는 유형이 고정되어 있지 않은 경우, 해당 유형을 미리 정의한 뒤 script로 조건에 따라 노출을 해야합니다.<br/><br/>• 반복된 컴포넌트는 컴포넌트의 ID로 직접 접근이 불가하며, Generator 컴포넌트에서 제공하는 method를 이용하여 접근해야 합니다. (컴포넌트의 ID는 중복을 허용하지 않기 때문에 반복된 컴포넌트의 ID는 웹스퀘어 엔진이 동적으로 할당합니다.)<br/><br/>• Generator 컴포넌트는 브라우저에 div로 출력됩니다. tagname 속성 설정을 통해 변경할 수 있습니다.</div><h1 id="r_7eef1caffefad7b4" class="element heading1"><span class="heading1_n">4</span>주요 API</h1><dl id="r_81d77b84aaef70b5" class="element definition_list"><dt><span class="r_ex_api_method_span">insertChild( index )</span></dt><dd><p>반복부(자식 컴포넌트)를 추가할 수 있는 기능으로, index로 추가할 위치를 결정할 수 있습니다. index가 생략된 경우 마지막에 추가됩니다.</p></dd><dt><span class="r_ex_api_method_span">getChild( index , id )</span></dt><dd><p>반복된 컴포넌트를 반환 받을 수 있습니다.</p></dd></dl><h1 id="r_4fd34c5c292208d9" class="element heading1"><span class="heading1_n">5</span>구현 예시</h1><h2 id="r_0335c710f3115115" class="element heading2"><span class="heading2_n">5.1</span>UI 구성하기</h2><pre id="r_30cf78acb2066a5c" class="element pre">1. generator 컴포넌트를 배치하고 id 속성을 정의합니다.
<code>ex) id="gen_box"</code>

2. 배치한 generator 컴포넌트의 안쪽(자식)에 반복할 컴포넌트를 배치합니다.
반복할 컴포넌트 중 스크립트에서 접근해야 할 컴포넌트가 있는 경우 id 속성을 정의합니다.
예제의 경우 inputbox의 id 속성을 "ibx_gen_input"로, trigger(버튼)의 id 속성을 "btn_gen_trigger"로 정의되었습니다.

3. (필요한 경우)자식 컴포넌트에 이벤트를 적용합니다.
보통 하나의 이벤트 핸들러에서 조건에 의해 분기하여 로직을 구성합니다.
예제의 경우 [getValue] 버튼에 onclick 이벤트를 할당하고 핸들러는 "scwin.btn_gen_trigger_onclick" 로 정의되었습니다.</pre><div id="r_3e4cceea7aed25dd" class="element image to_none"><p class="caption"><span class="image_caption_n">그림 0-1.</span>컴포넌트 구성 Outline 참고 이미지</p><p class="content"><img alt="" src="images/image223.png" width="570" height="191" /></p></div><p id="r_f6ad3a728e763796" class="element normal">아래는 소스코드 예시입니다.</p><div id="r_b6e4500b7f1db23b" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span>&lt;w2:generator <span class="attribute_name">style</span>=<span class="attribute_value">""</span> <span class="attribute_name">id</span>=<span class="attribute_value">"gen_box"</span>&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;xf:group <span class="attribute_name">style</span>=<span class="attribute_value">"width: 510px; border: 1px solid #eee; margin-bottom: 5px;"</span> <span class="attribute_name">id</span>=<span class="attribute_value">"grp_gen_group"</span>&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:textbox <span class="attribute_name">id</span>=<span class="attribute_value">"tbx_gen_label"</span> <span class="attribute_name">label</span>=<span class="attribute_value">"Lable"</span><span class="attribute_name">
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style</span>=<span class="attribute_value">"padding: 10px 20px; margin-right: 5px; display: inline-block; font-size: 13px;"</span> <span class="attribute_name">tagname</span>=<span class="attribute_value">"label"</span>&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/w2:textbox&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;xf:input <span class="attribute_name">adjustMaxLength</span>=<span class="attribute_value">"false"</span> <span class="attribute_name">id</span>=<span class="attribute_value">"ibx_gen_input"</span> <span class="attribute_name">style</span>=<span class="attribute_value">"margin-right: 5px;"</span>&gt;&lt;/xf:input&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;xf:trigger <span class="attribute_name">type</span>=<span class="attribute_value">"button"</span> <span class="attribute_name">style</span>=<span class="attribute_value">"width: 80px; height: 28px; margin-right:5px;"</span> <span class="attribute_name">id</span>=<span class="attribute_value">"btn_gen_trigger"</span><span class="attribute_name">
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev:onclick</span>=<span class="attribute_value">"scwin.btn_gen_trigger_onclick"</span>&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;xf:label&gt;&lt;![CDATA[getValue]]&gt;&lt;/xf:label&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/xf:trigger&gt;
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/xf:group&gt;
<span class="digits_10 code_line"></span>&lt;/w2:generator&gt;</pre></div><h2 id="r_9b16f66c322e8cc4" class="element heading2"><span class="heading2_n">5.2</span>Generator의 자식 컴포넌트를 추가하기</h2><p id="r_49d0417db552dbb4" class="element normal">Generator 컴포넌트의 insertChild method를 사용합니다.</p><div id="r_25db4546ebaa5361" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//예시1) id가 "gen_box" 인 genderator 컴포넌트의 마지막에 추가하는 경우</span>
<span class="digits_1 code_line"></span>gen_box.insertChild();
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//예시2) id가 "gen_box" 인 genderator 컴포넌트 첫번째에 추가하는 경우</span>
<span class="digits_1 code_line"></span>gen_box.insertChild(0);</pre></div><h2 id="r_ba65a008b051bd88" class="element heading2"><span class="heading2_n">5.3</span>추가된 Generator의 자식 컴포넌트 제어하기</h2><p id="r_fb72877060e03d8b" class="element normal">예시1) 추가된 자식 컴포넌트의 index를 알고 있는 경우.</p><div id="r_e697d82c86819c0e" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 "gen_box" 인 genderator 컴포넌트의 0번째에 추가된 자식 컴포넌트 중 id가 "tbx_gen_label" 인 컴포넌트를 반환 받습니다.</span>
<span class="digits_1 code_line"></span><span class="keyword">var</span> cmpChild = gen_box.getChild( 0 , <span class="string">"tbx_gen_label"</span> );
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//반환받은 컴포넌트의 value를 "websquare"로 설정합니다.</span>
<span class="digits_1 code_line"></span>cmpChild.setValue(<span class="string">"websquare"</span>);</pre></div><p id="r_686a0aa59dc04a07" class="element normal">예시2) 마지막에 추가된 컴포넌트에 접근하는 경우.</p><div id="r_d97ab2a825e0960d" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">/**
<span class="digits_10 code_line"></span> * 전제 사항
<span class="digits_10 code_line"></span> * 1. Generator의 id는 "gen_box" 입니다.
<span class="digits_10 code_line"></span>*/</span> 
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//Generator의 getLength() method로 추가된 자식 컴포넌트의 수를 반환 받습니다.</span>
<span class="digits_10 code_line"></span><span class="comment">//자식 컴포넌트는 index로 접근해야 하기 때문에 (반복된 건수 -1)로 index를 구합니다.</span>
<span class="digits_10 code_line"></span><span class="keyword">var</span> numLastIndex = gen_box.getLength() - 1;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//자식 컴포넌트 중 id 속성이 "tbx_gen_label" 인 컴포넌트를 반환 받습니다.</span>
<span class="digits_10 code_line"></span><span class="keyword">var</span> cmpChild = gen_box.getChild( numLastIndex , <span class="string">"tbx_gen_label"</span> );</pre></div></div></body></html>