<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>[컴포넌트 공통] 스크립트로 이벤트 해제(제거)하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_a07924f107f3556e" class="chapter_title">[컴포넌트 공통] 스크립트로 이벤트 해제(제거)하기</h1><h1 id="r_6708dd9a23f3233e" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_d21754a52ff76e1a" class="element pre">컴포넌트의 API unbind의 예제입니다.
unbind는 이벤트 핸들러를 제거하는 기능을 제공합니다.</pre><p id="r_53993497753b194a" class="element r_example_link_p"><a class="link" href="http://example.inswave.kr/sp5/exampleLink.html?p=P00164">P00164</a></p><h1 id="r_aecc468e0f143901" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_8750f497dc26d5df" class="element unordered_list"><li><p>스크립트로 컴포넌트의 모든 이벤트의 모든 핸들러 해제하기</p></li><li><p>스크립트로 컴포넌트의 특정 이벤트의 모든 핸들러 해제하기</p></li><li><p>스크립트로 컴포넌트의 특정 이벤트의 특정 핸들러 해제하기</p></li></ul><h1 id="r_8913f70d4d666743" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><h2 id="r_e5d7dcf99f3c88c8" class="element heading2"><span class="heading2_n">3.1</span>[공통] 로그 확인 방법</h2><p id="r_bb2505f7555c9792" class="element normal">이 예제는 예제 화면의 영역 [<span class="r_blue001_span">로그 확인</span>]의 textarea에 참고용 로그를 출력하고 있습니다.</p><div id="r_97affa1265d0b7df" class="element image"><p class="caption"><span class="image_caption_n">그림 0-1.</span>로그 출력 영역 참고 이미지</p><p class="content"><img alt="" src="images/image062.png" width="372" height="182" /></p></div><pre id="r_e18062808d003190" class="element pre">onclick 이벤트의 핸들러로 "scwin.btn_example_test_onclick_user"가 선언되어 있습니다. 이 핸들러는 스크립트로 onclick 이벤트 핸들러를 등록할 때 사용됩니다.

이 핸들러는 아래와 같은 문자열을 출력합니다.
<em>[로그 예시]</em>
<code>[공용] onclick 이벤트 핸들러 - 함수 scwin.btn_example_test_onclick_user</code></pre><h2 id="r_f5f1cd062196317d" class="element heading2"><span class="heading2_n">3.2</span>스크립트로 컴포넌트의 모든 이벤트의 모든 핸들러 해제하기</h2><dl id="r_a912c796f7aa548e" class="element definition_list"><dt>STEP1. 초기 상태 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">모든 이벤트의 모든 핸들러 제거하기</span>]의 버튼 <span class="r_btn_style_span">테스트 버튼 2</span>에는 onclick 핸들러 1개, onmouseup 핸들러 1개가 등록되어있습니다.</p></dd><dt>STEP2. 버튼 <span class="r_btn_style_span">테스트 버튼 2</span>을 클릭합니다.</dt><dd><p>onclick, onmouseup 이벤트가 발생합니다.</p></dd><dt>STEP3. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p><em>[로그 예시]</em></p><p>[06:19:31] [테스트 버튼 2] - onmouseup 발생 - 함수 scwin.btn_exam_test2_onmouseup</p><p>[06:19:31] [테스트 버튼 2] - onclick 발생 - 함수 scwin.btn_exam_test2_onclick</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP4. 버튼 <span class="r_exec_btn_style_span">모든 이벤트의 모든 핸들러 제거하기 - unbind</span>을 클릭합니다.</dt><dd><p>버튼 <span class="r_btn_style_span">테스트 버튼 2</span>의 모든 이벤트 핸들러가 제거됩니다.</p></dd><dt>STEP5. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p>실행된 스크립트 예시가 출력됩니다.</p><p><em>[로그 예시]</em> </p><p>[06:21:09] ** 함수 scwin.btn_ex2_onclick **</p><p>[06:21:09] btn_exam_test2.unbind();</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP6. 버튼 <span class="r_btn_style_span">테스트 버튼 2</span>을 클릭합니다.</dt><dd><p>- </p></dd><dt>STEP7. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p>출력된 로그가 없습니다.</p></dd></dl><h2 id="r_69447398e82be87c" class="element heading2"><span class="heading2_n">3.3</span>스크립트로 컴포넌트의 특정 이벤트의 모든 핸들러 해제하기</h2><dl id="r_19e1db3f504262b6" class="element definition_list"><dt>STEP1. 초기 상태 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">특정 이벤트의 모든 핸들러 제거하기</span>]의 버튼 <span class="r_btn_style_span">테스트 버튼 3</span>에는 onclick 핸들러 2개, onmouseup 핸들러 1개가 등록되어있습니다.</p></dd><dt>STEP2. 버튼 <span class="r_btn_style_span">테스트 버튼 3</span>을 클릭합니다.</dt><dd><p>onclick, onmouseup 이벤트가 발생합니다.</p></dd><dt>STEP3. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p><em>[로그 예시]</em></p><p>[06:29:53] [테스트 버튼 3] - onmouseup 발생 - 함수 scwin.btn_exam_test3_onmouseup</p><p>[06:29:53] [테스트 버튼 3] - onclick 발생 - 함수 scwin.btn_exam_test3_onclick</p><p>[06:29:53] [공용] onclick 이벤트 핸들러 - 함수 scwin.btn_example_test_onclick_user</p><p>[06:29:53] e.exampleParam : undefined</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP4. 버튼 <span class="r_exec_btn_style_span">특정 이벤트의 모든 핸들러 제거하기 - unbind</span>을 클릭합니다.</dt><dd><p>버튼 <span class="r_btn_style_span">테스트 버튼 3</span>의 onclick 이벤트의 모든 핸들러가 제거됩니다.</p></dd><dt>STEP5. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p>실행된 스크립트 예시가 출력됩니다.</p><p><em>[로그 예시]</em> </p><p>[06:31:26] ** 함수 scwin.btn_ex3_onclick **</p><p>[06:31:26] btn_exam_test3.unbind("onclick");</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP6. 버튼 <span class="r_btn_style_span">테스트 버튼 3</span>을 클릭합니다.</dt><dd><p>onmouseup 이벤트가 발생합니다.</p></dd><dt>STEP7. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p><em>[로그 예시]</em> </p><p>[06:32:32] [테스트 버튼 3] - onmouseup 발생 - 함수 scwin.btn_exam_test3_onmouseup</p></dd></dl><h2 id="r_ae0c765eb0873af1" class="element heading2"><span class="heading2_n">3.4</span>스크립트로 컴포넌트의 특정 이벤트의 특정 핸들러 해제하기</h2><dl id="r_305219630d553b89" class="element definition_list"><dt>STEP1. 초기 상태 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">특정 이벤트의 특정 핸들러 제거하기</span>]의 버튼 <span class="r_btn_style_span">테스트 버튼 4</span>에는 onclick 핸들러 2개가 등록되어있습니다.</p></dd><dt>STEP2. 버튼 <span class="r_btn_style_span">테스트 버튼 4</span>을 클릭합니다.</dt><dd><p>onclick 이벤트가 발생합니다.</p></dd><dt>STEP3. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p><em>[로그 예시]</em></p><p>[06:36:47] [테스트 버튼 4] - onclick 발생 - 함수 scwin.btn_exam_test4_onclick</p><p>[06:36:47] [공용] onclick 이벤트 핸들러 - 함수 scwin.btn_example_test_onclick_user</p><p>[06:36:47] e.exampleParam : undefined</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP4. 버튼 <span class="r_exec_btn_style_span">특정 이벤트의 특정 핸들러 제거하기 - unbind</span>을 클릭합니다.</dt><dd><p>버튼 <span class="r_btn_style_span">테스트 버튼 4</span>의 onclick 이벤트의 핸들러 [scwin.btn_example_test_onclick_user]가 제거됩니다.</p></dd><dt>STEP5. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p>실행된 스크립트 예시가 출력됩니다.</p><p><em>[로그 예시]</em> </p><p>[06:40:26] ** 함수 scwin.btn_ex4_onclick **</p><p>[06:40:26] btn_exam_test4.unbind("onclick", scwin.btn_example_test_onclick_user);</p><p>-----------------------------------------------------------------</p><p>(출력된 로그를 삭제합니다.)</p></dd><dt>STEP6. 버튼 <span class="r_btn_style_span">테스트 버튼 3</span>을 클릭합니다.</dt><dd><p>onclick 이벤트가 발생합니다.</p></dd><dt>STEP7. 실행 결과 확인하기</dt><dd><p>영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 확인합니다.</p><p><em>[로그 예시]</em> </p><p>[06:41:20] [테스트 버튼 4] - onclick 발생 - 함수 scwin.btn_exam_test4_onclick</p></dd></dl><h1 id="r_771dffdd52b93676" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_1b381d90a6dd7b5c" class="element heading2"><span class="heading2_n">4.1</span>스크립트로 이벤트 해제하기</h2><p id="r_83d182c3a376dedf" class="element r_heading_dt_p">유형1. 컴포넌트의 모든 이벤트의 모든 핸들러 해제하기</p><div id="r_fc2c3f196de0c4c0" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 btn_example_test인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 모든 이벤트의 모든 핸들러를 해제</span>
<span class="digits_1 code_line"></span>btn_example_test.unbind();</pre></div><p id="r_d514973c67645c7f" class="element r_heading_dt_p">유형2. 컴포넌트의 특정 이벤트의 모든 핸들러 해제하기</p><div id="r_1b5e20cbe318ecc9" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 btn_example_test인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 onclick 이벤트 핸들러 모두 해제.</span>
<span class="digits_1 code_line"></span>btn_example_test.unbind(<span class="string">"onclick"</span>);</pre></div><p id="r_6f55dfd632b2ebef" class="element r_heading_dt_p">유형3. 컴포넌트의 특정 이벤트의 특정 핸들러 해제하기</p><div id="r_5123ee152db45067" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 btn_example_test인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 onclick 이벤트의 'scwin.btn_example_test_onclick_user' 핸들러 해제</span>
<span class="digits_1 code_line"></span>btn_example_test.unbind(<span class="string">"onclick"</span>, scwin.btn_example_test_onclick_user);</pre></div><h1 id="r_b1f67c1f9e46252e" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><dl id="r_a9dd64319833183f" class="element definition_list"><dt><span class="r_ex_api_method_span">unbind( type , function )</span></dt><dd><p>컴포넌트에 이벤트와 이벤트 핸들러를 동적으로 해제합니다.</p></dd></dl></div></body></html>