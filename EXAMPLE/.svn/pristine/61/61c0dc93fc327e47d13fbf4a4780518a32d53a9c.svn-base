<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>[Input]다양한 방법으로 입력 체크하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_5fffaf79a848cf9f" class="chapter_title">[Input]다양한 방법으로 입력 체크하기</h1><h1 id="r_2465eaa81bc4b20e" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_aa3a8661290d5a0b" class="element pre">Input의 속성을 이용한 유효성 체크 함수 선언 예제입니다.
컴포넌트에서 blur가 발생하는 시점에 본 속성에 정의한 함수가 실행됩니다.
즉, onblur 이벤트 이전에 실행되며, blur가 발생하는 시점에 유효성을 확인하고 반환 값을 변경할 수 있습니다.

해당 예제는 onblur와 validator의 실행 우선 순위를 확인하기 위한 예제입니다.
실행은 validator &gt; onblur 순으로 실행되며 onblur, validator 각각 단독으로도 사용 가능합니다.</pre><p id="r_658ac10226c62f11" class="element r_example_link_p"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00195">P00195</a></p><h1 id="r_485c872580919368" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_d5af48a28a4882ea" class="element unordered_list"><li><p>oneditenter 사용하기</p></li><li><p>onviewchange 사용하기</p></li><li><p>displayFormatter 사용하기</p></li><li><p>onblur 사용하기</p></li><li><p>validator 사용하기</p></li></ul><h1 id="r_d1f00c1484694f4c" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><h2 id="r_da0f91686192b335" class="element heading2"><span class="heading2_n">3.1</span>[공통] 로그 확인 방법</h2><p id="r_4375fa008082b0ab" class="element normal">이 예제는 예제 화면의 영역 [<span class="r_blue001_span">로그 확인</span>]의 textarea에 참고용 로그를 출력하고 있습니다.</p><div id="r_04ca4053910beb04" class="element image"><p class="caption"><span class="image_caption_n">그림 0-1.</span>로그 출력 영역 참고 이미지</p><p class="content"><img alt="" src="images/image726.png" width="298" height="208" /></p></div><h2 id="r_3fe16ea08f842db5" class="element heading2"><span class="heading2_n">3.2</span>필수 입력 항목</h2><dl id="r_e72823bc6cf2890a" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">필수 입력 항목</span>]의 Input을 선택해 각각 텍스트 입력/ 미 입력 상태에서STEP2를 진행합니다.</dt></dl><dl id="r_4958143db638d4a8" class="element definition_list"><dt>STEP2. 키보드의 "ENTER" 키 혹은 "TAB"키를 눌러 이벤트 "oneditenter"를 발생 시킵니다.</dt></dl><dl id="r_bda7e7cedc4b3ac4" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image727.png" width="311" height="203" /></p></dd></dl><h2 id="r_4486b85562c0b74d" class="element heading2"><span class="heading2_n">3.3</span>날짜 입력</h2><dl id="r_23363632cd038fab" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">날짜 입력 </span>]의 Input에 텍스트를 입력합니다.</dt><dd><p>텍스트는 날짜 형식(ex. 20230201)과 날짜 형식이 아닌 텍스트를 각각 입력해 테스트합니다.</p></dd></dl><dl id="r_2bcc446394d77cf0" class="element definition_list"><dt>STEP2. Input에서 포커스를 벗어나게 합니다</dt><dd><p>"ENTER" 키, "TAB"키, 빈 영역 클릭 등의 방법으로 Input에서 포커스가 벗어나게 해줍니다.</p></dd></dl><dl id="r_e7893300825975fa" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image728.png" width="296" height="199" /></p></dd></dl><h2 id="r_e8f8970955f99b14" class="element heading2"><span class="heading2_n">3.4</span>주민등록 번호</h2><dl id="r_765c566145a32073" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">주민등록 번호</span>]의 Input에 텍스트를 입력합니다.</dt><dd><p>텍스트는 주민등록 번호 형식(ex. 6407131018433)과 주민등록 번호 형식이 아닌 텍스트를 각각 입력해 테스트합니다.</p></dd></dl><dl id="r_f806b0c182ebbbf1" class="element definition_list"><dt>STEP2. Input에서 포커스를 벗어나게 합니다</dt><dd><p>"ENTER" 키, "TAB"키, 빈 영역 클릭 등의 방법으로 Input에서 포커스가 벗어나게 해줍니다.</p></dd></dl><dl id="r_42c4031ae74709fc" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image729.png" width="304" height="201" /></p></dd></dl><h2 id="r_4879a017b00763a8" class="element heading2"><span class="heading2_n">3.5</span>전화 번호</h2><dl id="r_814b70684b3650f1" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">전화 번호</span>]의 Input에 텍스트를 입력합니다.</dt><dd><p>텍스트는 전화 번호 형식(ex. 01012345678)과 주민 번호 형식이 아닌 텍스트를 각각 입력해 테스트합니다.</p></dd></dl><dl id="r_7a736528fadfa2e4" class="element definition_list"><dt>STEP2. Input에서 포커스를 벗어나게 합니다</dt><dd><p>"ENTER" 키, "TAB"키, 빈 영역 클릭 등의 방법으로 Input에서 포커스가 벗어나게 해줍니다.</p></dd></dl><dl id="r_7271dadc9e1a0343" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image730.png" width="303" height="199" /></p></dd></dl><h2 id="r_759bb3fed6b3eb0a" class="element heading2"><span class="heading2_n">3.6</span>이메일 주소</h2><dl id="r_070c6f04308e5e24" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">이메일 주소</span>]의 Input에 텍스트를 입력합니다.</dt><dd><p>텍스트는 이메일 형식(ex. abcd@inswave.com)과 이메일 주소 형식이 아닌 텍스트를 각각 입력해 테스트합니다.</p></dd></dl><dl id="r_c75ae7eaeb6630f3" class="element definition_list"><dt>STEP2. Input에서 포커스를 벗어나게 합니다</dt><dd><p>"ENTER" 키, "TAB"키, 빈 영역 클릭 등의 방법으로 Input에서 포커스가 벗어나게 해줍니다.</p></dd></dl><dl id="r_029c3f73c4edfe29" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image731.png" width="308" height="200" /></p></dd></dl><h2 id="r_37f01b4f2f961e6f" class="element heading2"><span class="heading2_n">3.7</span>값 범위 체크</h2><dl id="r_5615659c3b39ef03" class="element definition_list"><dt>STEP1. 영역 [<span class="r_blue001_span">값 범위 체크</span>]에서 검사할 숫자 범위를 선택합니다.</dt></dl><dl id="r_10148dc7388d6f8c" class="element definition_list"><dt>STEP2. 영역 [<span class="r_blue001_span">값 범위 체크</span>]에서 Input에 숫자를 입력합니다. 입력 값은 범위 안의 값과 범위 밖의 값 각각 입력해 테스트합니다.</dt></dl><dl id="r_27855a72586039f0" class="element definition_list"><dt>STEP3. Input에서 포커스를 벗어나게 합니다</dt><dd><p>"ENTER" 키, "TAB"키, 빈 영역 클릭 등의 방법으로 Input에서 포커스가 벗어나게 해줍니다.</p></dd></dl><dl id="r_833831dd53eaa82b" class="element definition_list"><dt>STEP3. [<span class="r_blue001_span">로그 확인</span>] 영역의 로그를 확인합니다.</dt><dd><p><img alt="" src="images/image732.png" width="305" height="201" /></p></dd></dl><h1 id="r_ec781c96268be791" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_d4be6c0f18cbe3b6" class="element heading2"><span class="heading2_n">4.1</span>이벤트 구현</h2><dl id="r_2dff30c9efdf6992" class="element definition_list"><dt>해당 예시에서 말하는 이벤트로 구현한 경우는 다음과 같습니다.</dt><dd><p>oneditenter - 영역 <span class="r_blue001_span">[필수 입력 항목]</span></p><p>onviewchange - 영역 <span class="r_blue001_span">[날짜 입력]</span></p><p>onchange - 영역 <span class="r_blue001_span">[필수 주민등록 번호]</span></p><p>onblur - 영역 <span class="r_blue001_span">[필수 값 범위 체크]</span></p></dd></dl><dl id="r_30229d8e07dc6e88" class="element definition_list"><dt>STEP1. Input의 이벤트를 정의합니다.</dt><dd><p>사용 할 이벤트에 따라 onblur, oneditenter, onviewchange, onchange 이벤트 함수를 정의 합니다.</p></dd></dl><div id="r_1cadaa8350a48da6" class="element image"><p class="caption"><span class="image_caption_n">그림 0-2.</span>웹스퀘어5 SP5 스튜디오의 Property View(이벤트 창) 예시</p><p class="content"><img alt="" src="images/image733.png" width="402" height="243" /></p></div><ul id="r_2f6ede190b9b1cb3" class="element unordered_list"><li><p><span class="r_blue001_span">[필수] oneditenter = scwin.ibx1_oneditenter</span> //oneditenter 이벤트가 발생할 때 실행할 함수를 지정합니다.</p></li><li><p><span class="r_blue001_span">[필수] onviewchange(info)= scwin.ibx2_onviewchange</span> //onviewchange 이벤트가 발생할 때 실행할 함수를 지정합니다.</p></li><li><p><span class="r_blue001_span">[필수] onchange(info) = scwin.ibx3_onchange</span> //onchange 이벤트가 발생할 때 실행할 함수를 지정합니다.</p></li><li><p><span class="r_blue001_span">[필수] onblur(e) = scwin.ibx6_onblur</span> //onblur 이벤트가 발생할 때 실행할 함수를 지정합니다.</p></li></ul><p id="r_2f1d4f7fa50eb08e" class="element r_p_bold_pl_p">[소스 코드 예시] - 영역 <span class="r_blue001_span">[필수 입력 항목]</span></p><div id="r_7bd9bb107faff3a0" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">/**
<span class="digits_10 code_line"></span> * 영역[필수 입력 항목 검증]
<span class="digits_10 code_line"></span> * 입력 [ibx1]의 oneditenter 이벤트 합수
<span class="digits_10 code_line"></span> */</span>
<span class="digits_10 code_line"></span>scwin.ibx1_oneditenter = <span class="keyword">function</span> () {
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> value = <span class="keyword">this</span>.getValue();
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> str_len = value.trim().length;
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> strLog = <span class="string">"[Input] 필수 입력 항목 - 입력 값 : "</span> + value;
<span class="digits_10 code_line"></span>    <span class="keyword">if</span> (str_len == 0) {
<span class="digits_10 code_line"></span>        <span class="comment">//로그 출력</span>
<span class="digits_10 code_line"></span>        strLog = <span class="string">"[Input] 해당 항목은 필수입력 항목입니다."</span>;
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>    $c.frame.printExampleLog(strLog, txa_log, false);
<span class="digits_10 code_line"></span>    console.log(strLog);
<span class="digits_10 code_line"></span>}</pre></div><div id="r_69cea00e04f43b3a" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span>&lt;xf:input <span class="attribute_name">class</span>=<span class="attribute_value">""</span> <span class="attribute_name">dataType</span>=<span class="attribute_value">"text"</span> <span class="attribute_name">editType</span>=<span class="attribute_value">"select"</span> <span class="attribute_name">id</span>=<span class="attribute_value">"ibx1"</span> <span class="attribute_name">mandatory</span>=<span class="attribute_value">"true"</span> <span class="attribute_name">maxlength</span>=<span class="attribute_value">"13"</span> <span class="attribute_name">placeholder</span>=<span class="attribute_value">"해당 항목은 필수입력입니다."</span> <span class="attribute_name">style</span>=<span class="attribute_value">"width:161px;"</span> <span class="attribute_name">ev:oneditenter</span>=<span class="attribute_value">"scwin.ibx1_oneditenter"</span>&gt;</pre></div><h2 id="r_ef1b9561a9f40bf8" class="element heading2"><span class="heading2_n">4.2</span>displayFormatter 구현</h2><dl id="r_42a218da18c65beb" class="element definition_list"><dt>STEP1. displayFormatter 함수를 정의합니다.</dt></dl><div id="r_98315390c8d1ef05" class="element image"><p class="caption"><span class="image_caption_n">그림 0-3.</span>웹스퀘어5 SP5 스튜디오의 Property View(속성 창) 예시</p><p class="content"><img alt="" src="images/image734.png" width="399" height="233" /></p></div><ul id="r_1593e736b30306b2" class="element unordered_list"><li><p><span class="r_blue001_span">[필수] displayFormatter = scwin.phoneFormatter</span> //input에서 입력이 완료되면 형식을 맞추기 위해 실행되는 함수</p></li></ul><p id="r_3e8622739cc1b004" class="element r_heading_dt_p">STEP2. 지정된 함수 내에 실행할 코드를 작성합니다.</p><p id="r_2634f46404dfc715" class="element r_p_bold_pl_p">[소스 코드 예시]</p><div id="r_781c0de804c367d4" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">/**
<span class="digits_10 code_line"></span> * 영역 [전화번호]의
<span class="digits_10 code_line"></span> * 입력 [ibx4]의 displayFormatter 함수
<span class="digits_10 code_line"></span> */</span>
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span>scwin.phoneFormatter = <span class="keyword">function</span> (str) {
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> strLog = <span class="string">"[Input] 전화번호 - 입력 값 : "</span> + str;
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> phoneNum = scwin.formatPhone(str);
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> isDash = (phoneNum.indexOf(<span class="string">"-"</span>) &gt; 1);
<span class="digits_10 code_line"></span>    <span class="keyword">if</span> (!isDash) {
<span class="digits_10 code_line"></span>        <span class="comment">//로그 출력</span>
<span class="digits_10 code_line"></span>        strLog = <span class="string">"[Input] 전화번호 형식 오류입니다."</span>;
<span class="digits_10 code_line"></span>        phoneNum = <span class="string">""</span>;
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>    $c.frame.printExampleLog(strLog, txa_log, false);
<span class="digits_10 code_line"></span>    console.log(strLog);
<span class="digits_10 code_line"></span>    <span class="keyword">return</span> phoneNum;
<span class="digits_10 code_line"></span>};</pre></div><h2 id="r_f01ef1cd921f6cf9" class="element heading2"><span class="heading2_n">4.3</span>validator 구현</h2><dl id="r_d1eb9bf4bbea6a41" class="element definition_list"><dt>STEP1. validator 함수를 정의합니다.</dt></dl><div id="r_307dd0776d093c40" class="element image"><p class="caption"><span class="image_caption_n">그림 0-4.</span>웹스퀘어5 SP5 스튜디오의 Property View(속성 창) 예시</p><p class="content"><img alt="" src="images/image735.png" width="404" height="202" /></p></div><ul id="r_7aa66ed71944f432" class="element unordered_list"><li><p><span class="r_blue001_span">[필수] validator = scwin.ibx5_validator</span> //onblur 이벤트이전에 실행할 validator 함수를 지정합니다.</p></li></ul><p id="r_be0fa5b2f36f87ae" class="element r_heading_dt_p">STEP2. 지정된 함수 내에 실행할 코드를 작성합니다.</p><p id="r_31e69e7a160b7758" class="element r_p_bold_pl_p">[소스 코드 예시]</p><div id="r_331d0d09373c92e8" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">/**
<span class="digits_10 code_line"></span> * 영역 [이메일 주소]의
<span class="digits_10 code_line"></span> * 입력 [ibx5]의 validator 함수
<span class="digits_10 code_line"></span> */</span>
<span class="digits_10 code_line"></span>scwin.ibx5_validator = <span class="keyword">function</span> (info) {
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> value = info;
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> strLog = <span class="string">"[Input] 이메일 주소 - 입력 값 : "</span> + value;
<span class="digits_10 code_line"></span>    <span class="keyword">var</span> flag = scwin.isEmail(info);
<span class="digits_10 code_line"></span>    <span class="keyword">if</span> (!flag) {
<span class="digits_10 code_line"></span>        <span class="comment">//로그 출력</span>
<span class="digits_10 code_line"></span>        strLog = <span class="string">"[Input] 이메일 주소소 형식 오류입니다."</span>;
<span class="digits_10 code_line"></span>        value = <span class="string">""</span>;
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>    <span class="keyword">if</span> (info.length != 0){
<span class="digits_10 code_line"></span>        $c.frame.printExampleLog(strLog, txa_log, false);
<span class="digits_10 code_line"></span>        console.log(strLog);
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>    <span class="keyword">return</span> value;
<span class="digits_10 code_line"></span>};</pre></div><h1 id="r_2ebcae8943b2959a" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><dl id="r_e1222b5b7c48acf5" class="element definition_list"><dt><span class="r_ex_api_event_span">oneditenter</span></dt><dd><p>엔터키를 키를 눌렀을 때 발생.</p></dd><dt><span class="r_ex_api_event_span">onviewchange</span></dt><dd><p>키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.</p><p>스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)</p></dd><dt><span class="r_ex_api_event_span">onchange</span></dt><dd><p>컴포넌트의 value가 변경되었을 때 발생하는 이벤트로 focus out 시점에 발생한다.</p><p>스크립트를 통해 값이 변경 된 경우에도 발생한다.</p></dd><dt><span class="r_ex_api_event_span">onblur</span></dt><dd><p>포커스를 잃었을 때 발생한다.</p></dd><dt><span class="r_ex_api_property_span">displayformatter</span></dt><dd><p>컴포넌트의 value를 포맷하는 함수 명.</p><p>해당 함수는 엔진에서 파라미터로 넘겨준 value에 대해 포매팅을 수행한 후, 화면에 표현할 최종 값을 반환함.</p></dd><dt><span class="r_ex_api_property_span">validator</span></dt><dd><p>유효성 체크 함수 이름.</p><p>컴포넌트에서 blur가 발생하는 시점에 본 속성에 정의한 함수가 실행됨.</p><p>즉, onblur 이벤트 이전에 실행되며, blur가 발생하는 시점에 유효성을 확인하며 return을 통해 value를 변경 할 수 있음.</p></dd></dl><h1 id="r_c0ed1d050be3b833" class="element heading1"><span class="heading1_n">6</span>참고 문서</h1><ul id="r_614a7d552a5fbbcd" class="element unordered_list"><li><p><em>[웹스퀘어5 SP5 개발 가이드] 입력 검증</em></p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide#026c1a35de446a11">https://docs1.inswave.com/sp5_user_guide#026c1a35de446a11</a></p></li><li><p><em>[웹스퀘어5 SP5 개발 가이드] displayFormatter</em></p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide#11934977445489b7">https://docs1.inswave.com/sp5_user_guide#11934977445489b7</a></p></li></ul></div></body></html>