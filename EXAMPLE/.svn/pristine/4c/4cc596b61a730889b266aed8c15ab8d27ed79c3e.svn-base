<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>동적으로 Submission 제어하기(생성,삭제,실행)</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_96e89581a8f8793b" class="chapter_title">동적으로 Submission 제어하기(생성,삭제,실행)</h1><h1 id="r_a42fbe2bcc403c68" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_de51448b7840852d" class="element pre">스크립트로 Submission을 생성, 삭제, 실행, 및 Submission의 객체를 반환 받는 예제입니다.
공통 스크립트 작성 시 주로 사용됩니다.</pre><p id="r_4e622c8a12514814" class="element r_example_link_p"><a class="link" href="http://example.inswave.kr/sp5/exampleLink.html?p=P00030">P00030</a></p><h1 id="r_97761979ad436dc4" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_00290608ed3db963" class="element unordered_list"><li><p>Submission 생성하기</p></li><li><p>Submission 삭제하기</p></li><li><p>Submission 실행하기</p></li><li><p>Submission 객체 정보 반환받기</p></li></ul><h1 id="r_6072479d6820a6c2" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><p id="r_bf657881fc3f1f39" class="element normal">이 예제는 예제 화면의 영역 [<span class="r_blue001_span">로그 확인</span>]의 textarea와 브라우저 개발자 도구의 콘솔에 실행 결과 값이 출력됩니다.</p><div id="r_2b1e018f6b29ed6e" class="element image"><p class="caption"><span class="image_caption_n">그림 0-1.</span>로그 출력 영역 참고 이미지</p><p class="content"><img alt="" src="images/image027.png" width="374" height="186" /></p></div><dl id="r_ae3c4f826525f236" class="element definition_list"><dt>Submission 생성하기</dt><dd><p>Submission을 생성합니다.</p><p>1. 버튼 <span class="r_btn_refresh_span">새로고침</span>을 클릭합니다.</p><p>2. 버튼 <span class="r_exec_btn_style_span">실행1</span>을 클릭합니다.</p><p>3. 생성된 객체의 정보를 확인하기 위해 버튼 <span class="r_exec_btn_style_span">실행4</span>를 클릭합니다.</p><p>4. 브라우저 개발자 도구의 콘솔로 반환된 객체를 확인합니다.</p></dd></dl><dl id="r_551747014da045b2" class="element definition_list"><dt>Submission 삭제하기</dt><dd><p>Submission을 삭제합니다.</p><p>1. 버튼 <span class="r_btn_refresh_span">새로고침</span>을 클릭합니다.</p><p>2. 버튼 <span class="r_exec_btn_style_span">실행2</span>를 클릭합니다.</p><p>3. 삭제된 Submission 객체의 정보를 확인합니다.</p><p>버튼 <span class="r_exec_btn_style_span">실행4</span>를 클릭합니다.</p><p>아래와 같은 로그가 출력됩니다.</p><p>[로그 출력 예시]</p><p>** scwin.btn_ex4_onclick 실행 **</p><p>$p.getSubmission("sbm_example1");</p><p>"sbm_example1" ID를 가진 submission객체가 반환됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.</p><p>"sbm_example1" ID를 가진 submission객체를 찾을 수 없습니다.</p><p>-----------------------------</p></dd></dl><dl id="r_3debf5afef3fa44a" class="element definition_list"><dt>Submission 실행하기</dt><dd><p>1. 버튼 <span class="r_btn_refresh_span">새로고침</span>을 클릭합니다.</p><p>2. 버튼 <span class="r_exec_btn_style_span">실행3</span>을 클릭합니다.</p><p>3. 실행 후 응답 데이터를 확인합니다.</p><p>아래와 같은 로그가 출력됩니다. (브라우저 개발자 도구의 콘솔로 응답 객체가 출력됩니다)</p><p>[로그 출력 예시]</p><p>** scwin.btn_ex3_onclick 실행 **</p><p>$p.executeSubmission("sbm_example1");</p><p>"sbm_example1" ID를 가진 submission이 없는 경고 로그가 출력됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.</p><p>submitDoneHandler</p><p>{ "dc_resUserListData":</p><p>	[{</p><p>		"name":"김수녕"</p><p>		, "birthday" : "19710405"</p><p>		, "height" : "164"</p><p>		, "weight" : "58"</p><p>		, "gender" : "F"</p><p>	},{</p><p>		"name":"김연아"</p><p>		, "birthday" : "19900905"</p><p>		, "height" : "164"</p><p>		, "weight" : "47"</p><p>		, "gender" : "F"</p><p>	}]</p><p>}</p><p>-----------------------------</p></dd></dl><dl id="r_c7bdba42690169d3" class="element definition_list"><dt>Submission 객체 정보 반환받기</dt><dd><p>Submission 객체 정보를 반환 받습니다.</p><p>1. 버튼 <span class="r_btn_refresh_span">새로고침</span>을 클릭합니다.</p><p>2. 버튼 <span class="r_exec_btn_style_span">실행4</span>를 클릭합니다.</p><p>3. 반환값을 확인합니다.</p><p>3.1. 생성된 Submission이 없는 경우 아래와 같은 로그가 출력됩니다.</p><p>[로그 출력 예시]</p><p>** scwin.btn_ex4_onclick 실행 **</p><p>$p.getSubmission("sbm_example1");</p><p>"sbm_example1" ID를 가진 submission객체가 반환됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.</p><p>"sbm_example1" ID를 가진 submission객체를 찾을 수 없습니다.</p><p>--------------------------------</p><p>3.2 생성된 Submission이 있는 경우 아래와 같은 로그가 출력됩니다.</p><p>[로그 출력 예시]</p><p>** scwin.btn_ex4_onclick 실행 **</p><p>$p.getSubmission("sbm_example1");</p><p>"sbm_example1" ID를 가진 submission객체가 반환됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.</p><p>action : /sp5/data/sampleData/sampleData_json_dc_list.json</p><p>ref : data:json,dma_request</p><p>--------------------------------</p></dd></dl><h1 id="r_b01b877e5608fb49" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_7a8ea8ea6aa25cc6" class="element heading2"><span class="heading2_n">4.1</span>Submission 생성하기</h2><div id="r_e25dc949cdc61f00" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="keyword">var</span> jsnSubmissionOptions;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//옵션 설정.</span>
<span class="digits_10 code_line"></span>jsnSubmissionOptions = {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;id : <span class="string">"sbm_example1"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;ref : <span class="string">"data:json,dma_request"</span>,              <span class="comment">//생략 가능 - $p.executeSubmission 호출시 request data 전달이 가능합니다. </span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;target : <span class="string">"data:json,dc_resUserListData"</span>,    <span class="comment">//생략 가능 - submitDoneHandler 함수에서 response data의 제어가 가능합니다.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;action : <span class="string">"/sp5/data/sampleData/sampleData_json_dc_list.json"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;mediatype : <span class="string">"application/json"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;submitDoneHandler : scwin.example_submitDoneHandler,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;submitErrorHandler : scwin.example_submitErrorHandler
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//submission 생성</span>
<span class="digits_10 code_line"></span>$p.createSubmission( jsnSubmissionOptions );</pre></div><p id="r_60f3452557aafa3b" class="element normal">아래는 이벤트 핸들러를 정의 예시입니다.</p><div id="r_edc2adcea9452004" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="comment">//submssion의 submitDoneHandler</span>
<span class="digits_10 code_line"></span>scwin.example_submitDoneHandler = <span class="keyword">function</span> (e) {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//응답 본문 console 출력</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(e.responseText);
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//응답 객체 console 출력</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(e.responseJSON);
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="comment">//submision의 submitErrorHandler</span>
<span class="digits_10 code_line"></span>scwin.example_submitErrorHandler = <span class="keyword">function</span> (e) {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//개발자 도구 console에 에러 객체 출력</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;console.error(<span class="string">"submitErrorHandler"</span>, e);
<span class="digits_10 code_line"></span>};</pre></div><h2 id="r_2880cae9c86a0f52" class="element heading2"><span class="heading2_n">4.2</span>Submission 삭제하기</h2><div id="r_cc8af2d2ee841e57" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//submission 삭제. - "sbm_example1" ID를 가진 submission을 삭제합니다.</span>
<span class="digits_1 code_line"></span>$p.deleteSubmission(<span class="string">"sbm_example1"</span>);</pre></div><div id="r_d2c8a9f73a93722a" class="element caution">존재하지 않는 submission인 경우 오류 로그가 출력됩니다. 오류 로그만 출력하고 이후 로직은 수행이 되지만 해당 로그 출력을 원하지 않는 경우는 <span class="r_user_input1_span">$p.deleteSubmission</span> 호출 전 <span class="r_user_input1_span">$p.getSubmission</span> API를 통해 존재 유무를 판단 후 <span class="r_user_input1_span">$p.deleteSubmission</span> API를 호출하시면 됩니다.</div><h2 id="r_cf4ce3251579dd76" class="element heading2"><span class="heading2_n">4.3</span>Submission 실행하기</h2><div id="r_7d5cc3f4655ac5af" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//submission 실행. - "sbm_example1" ID를 가진 submission을 실행합니다.</span>
<span class="digits_1 code_line"></span>$p.executeSubmission(<span class="string">"sbm_example1"</span>);</pre></div><h2 id="r_d6a492a0d3c5af1c" class="element heading2"><span class="heading2_n">4.4</span>Submission 객체 정보 반환받기</h2><div id="r_a80f53cd3bd0378b" class="element code support_code_numbering"><pre><span class="digits_10 code_line"></span><span class="keyword">var</span> objSubmission;
<span class="digits_10 code_line"></span>    
<span class="digits_10 code_line"></span><span class="comment">//submisison 객체 반환 - "sbm_example1" ID를 가진 submission을 반환합니다.</span>
<span class="digits_10 code_line"></span><span class="comment">//반환 받은 객체의 속성을 재정의하여 사용할 수 있습니다.</span>
<span class="digits_10 code_line"></span>objSubmission = $p.getSubmission(<span class="string">"sbm_example1"</span>);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="keyword">if</span> (!objSubmission) {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//반환된 submission객체가 없는 경우 - null 반환</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;
<span class="digits_10 code_line"></span>} <span class="keyword">else</span> {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//반환된 submission의 정보 출력</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//objSubmission.action</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//objSubmission.ref</span>
<span class="digits_10 code_line"></span>}</pre></div><h1 id="r_749328669e9a59c1" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><dl id="r_ee490a2120409187" class="element definition_list"><dt><span class="r_ex_api_method_span">$p.createSubmission( submissionObj )</span></dt><dd><p>동적으로 submission을 생성합니다.</p></dd><dt><span class="r_ex_api_method_span">$p.deleteSubmission( submissionID )</span></dt><dd><p>동적으로 submission을 삭제합니다.</p></dd><dt><span class="r_ex_api_method_span">$p.executeSubmission( submissionID , requestData , obj )</span></dt><dd><p>submission을 실행합니다.</p></dd><dt><span class="r_ex_api_method_span">$p.getSubmission( submissionID )</span></dt><dd><p>submission객체를 반환합니다.</p></dd></dl></div></body></html>