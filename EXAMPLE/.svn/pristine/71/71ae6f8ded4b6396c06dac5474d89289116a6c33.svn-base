<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>[컴포넌트 공통] 스크립트로 class 제어하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="26ad9595a3708c5f" /></head><body><div id="content"><h1 id="r_2e3a597d6bd176a2" class="chapter_title">[컴포넌트 공통] 스크립트로 class 제어하기</h1><h1 id="r_f4efc011ba0a9145" class="element heading1"><span class="heading1_n">1</span>개요</h1><pre id="r_5d166b062f875cf9" class="element pre">컴포넌트의 class를 제어하는 API 사용 예제입니다.</pre><pre id="r_2674bbc378c14748" class="element pre">아래의 API로 class를 제어 할 수 있습니다.
- class 추가 : addClass
- class 변경 : changeClass
- class 제거 : removeClass
- class 토글 : toggleClass
- class 유무 확인 : hasClass</pre><p id="r_462ca300d6a69680" class="element r_example_link_p"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00029">P00029</a></p><h1 id="r_1224537f22eb92f9" class="element heading1"><span class="heading1_n">2</span>구현된 기능</h1><ul id="r_6ae461410475bbae" class="element unordered_list"><li><p>InputBox에 class 추가하기</p></li><li><p>InputBox의 class 변경하기</p></li><li><p>InputBox의 class 제거하기</p></li><li><p>InputBox의 class 토글하기</p></li><li><p>InputBox의 class 유무 반환받기</p></li></ul><h1 id="r_5b5dc45b7d5105e1" class="element heading1"><span class="heading1_n">3</span>예제 테스트 방법</h1><h2 id="r_151b3355d2c2ad90" class="element heading2"><span class="heading2_n">3.1</span>InputBox에 class 추가하기</h2><dl id="r_295e5eb1c590c4c5" class="element definition_list"><dt>STEP1. 영역 [<em>class 추가하기</em>]의 버튼 <span class="r_exec_btn_style_span">class 추가하기</span> 을 클릭합니다.</dt><dd><p>컴포넌트에 class "P00029_exam1"를 추가합니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image051.png" width="360" height="137" /></p></dd><dt>STEP2. 실행 결과를 확인합니다.</dt><dd><p>InputBox 영역의 input의 테두리와 글자색이 붉은색으로 변경됩니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image052.png" width="263" height="53" /></p></dd></dl><h2 id="r_f03a3bd9a2d4cd0e" class="element heading2"><span class="heading2_n">3.2</span>InputBox의 class 변경하기</h2><dl id="r_8d44c8039701532e" class="element definition_list"><dt>STEP1. 영역 [<em>class 변경하기</em>]의 버튼 <span class="r_exec_btn_style_span">class 변경하기</span> 을 클릭합니다.</dt><dd><p>컴포넌트에 class "P00029_exam1"를 "P00029_exam2"로 변경합니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image053.png" width="365" height="160" /></p></dd><dt>STEP2. 실행 결과를 확인합니다.</dt><dd><p>InputBox 영역의 input의 테두리와 글자색이 붉은색에서 푸른색으로 변경됩니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image054.png" width="263" height="49" /></p></dd></dl><h2 id="r_b51a181091e1872b" class="element heading2"><span class="heading2_n">3.3</span>InputBox의 class 제거하기</h2><dl id="r_2573ce7769d62fec" class="element definition_list"><dt>STEP1. 영역 [<em>class 제거하기</em>]의 버튼 <span class="r_exec_btn_style_span">class 제거하기</span> 을 클릭합니다.</dt><dd><p>컴포넌트에 class "P00029_exam1"를 제거합니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image055.png" width="363" height="159" /></p></dd><dt>STEP2. 실행 결과를 확인합니다.</dt><dd><p>InputBox 영역의 input의 테두리와 글자색의 붉은색이 제거됩니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image056.png" width="261" height="43" /></p></dd></dl><h2 id="r_ae591b1ec10d8adc" class="element heading2"><span class="heading2_n">3.4</span>InputBox의 class 토글하기</h2><dl id="r_e34f40e47c394dff" class="element definition_list"><dt>STEP1. 영역 [<em>class 토글하기</em>]의 버튼 <span class="r_exec_btn_style_span">class 토글하기</span> 을 클릭합니다.</dt><dd><p>컴포넌트에 class "P00029_exam1"를 토글(있으면 제거, 없으면 추가)합니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image057.png" width="365" height="160" /></p></dd><dt>STEP2. 실행 결과를 확인합니다.</dt><dd><p>InputBox 영역의 input의 테두리와 글자색의 푸른색이 제거됩니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image058.png" width="264" height="53" /></p></dd><dt>STEP3. 버튼 <span class="r_exec_btn_style_span">class 토글하기</span> 을 클릭합니다.</dt><dd><p>- </p></dd><dt>STEP4. 실행 결과를 확인합니다.</dt><dd><p>InputBox 영역의 input의 테두리와 글자색의 푸른색으로 변경됩니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image059.png" width="262" height="47" /></p></dd></dl><h2 id="r_d8845def6a21f380" class="element heading2"><span class="heading2_n">3.5</span>InputBox의 class 유무 반환받기</h2><dl id="r_20b97eac73e26f5f" class="element definition_list"><dt>STEP1. 영역 [<em>class 유무 반환하기</em>]의 버튼 <span class="r_exec_btn_style_span">class 유무 반환하기</span> 을 클릭합니다.</dt><dd><p>컴포넌트의 class "P00029_exam1"의 유무를 반환받습니다.</p><p><em>[브라우저(Chrome) 실행 예시]</em></p><p><img alt="" src="images/image060.png" width="362" height="160" /></p></dd><dt>STEP2. 실행 결과를 확인합니다.</dt><dd><p><span class="r_blue001_span">반환값 : true (data type : boolean)</span> 이 alert 됩니다.</p></dd></dl><h1 id="r_52f39f029de585a0" class="element heading1"><span class="heading1_n">4</span>구현 예시</h1><h2 id="r_437f0ae646273d1c" class="element heading2"><span class="heading2_n">4.1</span>class 정의하기</h2><pre id="r_1a9be4bfc7bc5af4" class="element pre">css 파일에 아래와 같이 두개의 class를 정의합니다.
css 파일 경로 : /css/example.css</pre><div id="r_959166458b077e06" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="selector">.P00029_exam1</span> {
<span class="digits_1 code_line"></span>    <span class="css_name">border-color</span>: <span class="css_value">#e40a0a</span>; 
<span class="digits_1 code_line"></span>    <span class="css_name">color</span>: <span class="css_value">#e40a0a</span>;
<span class="digits_1 code_line"></span>}
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="selector">.P00029_exam2</span> {
<span class="digits_1 code_line"></span>    <span class="css_name">border-color</span>: <span class="css_value">#0070c0</span>; 
<span class="digits_1 code_line"></span>    <span class="css_name">color</span>: <span class="css_value">#0070c0</span>;
<span class="digits_1 code_line"></span>}</pre></div><h2 id="r_8c1f35dc6083290b" class="element heading2"><span class="heading2_n">4.2</span>InputBox에 class 추가하기</h2><div id="r_a9ad7c1350c6d01f" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 ibx_exam1인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 class 속성에 "P00029_exam1" 추가하기</span>
<span class="digits_1 code_line"></span>ibx_exam1.addClass(<span class="string">"P00029_exam"</span>);</pre></div><h2 id="r_79f67531f4edb677" class="element heading2"><span class="heading2_n">4.3</span>InputBox의 class 변경하기</h2><div id="r_c0ac008e538e9d4c" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 ibx_exam2인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 class 속성에 정의된 "P00029_exam1" class 제거하고 "P00029_exam2"를 추가한다.</span>
<span class="digits_1 code_line"></span><span class="comment">//oldClassName이 정의되어 있지 않은 경우에도 newClassName가 추가된다.</span>
<span class="digits_1 code_line"></span>ibx_exam2.changeClass(<span class="string">"P00029_exam1"</span>, <span class="string">"P00029_exam2"</span>);</pre></div><h2 id="r_c3801ac1bb4dadec" class="element heading2"><span class="heading2_n">4.4</span>InputBox의 class 제거하기</h2><div id="r_aeb0794093135763" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 ibx_exam3인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 class 속성에 정의된 "P00029_exam1" class를 제거한다.</span>
<span class="digits_1 code_line"></span>ibx_exam3.removeClass(<span class="string">"P00029_exam1"</span>);</pre></div><h2 id="r_7502c6736f0df6a2" class="element heading2"><span class="heading2_n">4.5</span>InputBox의 class 토글하기</h2><div id="r_634dc48c2f15773b" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 ibx_exam4인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 class 속성에 정의된 "P00029_exam2" class를 토글한다.</span>
<span class="digits_1 code_line"></span><span class="comment">//P00029_exam2 class가 있으면 삭제, P00029_exam2 class가 없으면 추가</span>
<span class="digits_1 code_line"></span>ibx_exam4.toggleClass(<span class="string">"P00029_exam2"</span>);</pre></div><h2 id="r_fba197ab414a9c12" class="element heading2"><span class="heading2_n">4.6</span>InputBox의 class 유무 반환받기</h2><div id="r_9ed1fbfa776ae99e" class="element code support_code_numbering"><pre><span class="digits_1 code_line"></span><span class="comment">//id가 ibx_exam5인 컴포넌트의 예시입니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="keyword">var</span> tmpRet;
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="comment">//컴포넌트의 class 속성에 정의된 "P00029_exam1" 존재 유무를 boolean(true,false)으로 반환한다.</span>
<span class="digits_1 code_line"></span>tmpRet = ibx_exam5.hasClass(<span class="string">"P00029_exam1"</span>);</pre></div><h1 id="r_9aa7f8cb463a05e0" class="element heading1"><span class="heading1_n">5</span>주요 API</h1><dl id="r_f8dbe0cb75163761" class="element definition_list"><dt><span class="r_ex_api_method_span">addClass( className )</span></dt><dd><p>컴포넌트에 CSS class를 추가합니다.</p></dd><dt><span class="r_ex_api_method_span">changeClass( oldClassName , newClassName )</span></dt><dd><p>oldClassName에 해당하는 class를 newClassName로 교체합니다.</p></dd><dt><span class="r_ex_api_method_span">removeClass( className )</span></dt><dd><p>className에 해당하는 class를 제거합니다.</p></dd><dt><span class="r_ex_api_method_span">toggleClass( className )</span></dt><dd><p>className에 해당하는 class가 존재하면 제거하고, 존재하지 않으면 추가합니다.</p></dd><dt><span class="r_ex_api_method_span">hasClass( className )</span></dt><dd><p>className에 해당하는 class의 존재 여부를 boolean 값으로 반환합니다.(존재할 경우 true, 존재하지 않는 경우 flase를 반환)</p></dd></dl></div></body></html>